name: CI

on:
  push:
    branches: [google-cloud-deployment]
  pull_request:
    branches: [google-cloud-deployment]

permissions:
  contents: read
  id-token: write

jobs:
  build-test:
    name: Build & Test (${{ matrix.service }})
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        service:
          [
            gateway,
            services/auth,
            services/catalog,
            services/order,
            services/delivery,
            services/notification,
            web,
          ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ${{ matrix.service }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ matrix.service }}
        run: npm ci

      - name: Lint (if script exists)
        working-directory: ${{ matrix.service }}
        run: |
          if [ -f package.json ] && jq -e '.scripts.lint' package.json >/dev/null; then
            npm run lint
          else
            echo "No lint script"
          fi

      - name: Test (if script exists)
        working-directory: ${{ matrix.service }}
        run: |
          if [ -f package.json ] && jq -e '.scripts.test' package.json >/dev/null; then
            npm test --if-present
          else
            echo "No tests"
          fi

      - name: Build (web only)
        if: matrix.service == 'web'
        working-directory: web
        run: npm run build
        env:
          VITE_API_BASE: http://localhost:8080

  docker-images:
    name: Build & Push Images
    runs-on: ubuntu-latest
    needs: build-test
    if: github.ref == 'refs/heads/google-cloud-deployment'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker auth
        run: gcloud auth configure-docker --quiet

      - name: Build & Push
        run: |
          set -euo pipefail
          PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}
          SHORT_SHA=${GITHUB_SHA::7}
          TAG=sha-${SHORT_SHA}
          declare -A PATHS=( \
            [gateway]=gateway \
            [auth]=services/auth \
            [catalog]=services/catalog \
            [order]=services/order \
            [delivery]=services/delivery \
            [notification]=services/notification \
            [web]=web \
          )
          for image in "${!PATHS[@]}"; do
            dir=${PATHS[$image]}
            echo "Building $image from $dir"
            docker build -t gcr.io/$PROJECT_ID/$image:$TAG -t gcr.io/$PROJECT_ID/$image:latest $dir
            docker push gcr.io/$PROJECT_ID/$image:$TAG
            docker push gcr.io/$PROJECT_ID/$image:latest
          done
          echo "IMAGE_TAG=$TAG" >> $GITHUB_ENV

      - name: Summary
        run: echo "Built & pushed images with tag $IMAGE_TAG"

  # Placeholder for future deploy job
  # deploy:
  #   needs: docker-images
  #   runs-on: ubuntu-latest
  #   steps: [...]
